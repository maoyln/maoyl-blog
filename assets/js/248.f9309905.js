(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{574:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"任意门-easymotion-让光标移动得随心所欲"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#任意门-easymotion-让光标移动得随心所欲"}},[s._v("#")]),s._v(" 任意门：easymotion，让光标移动得随心所欲")]),s._v(" "),t("h2",{attrs:{id:"插件-vim-easymotion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插件-vim-easymotion"}},[s._v("#")]),s._v(" 插件：vim-easymotion")]),s._v(" "),t("p",[s._v("vim-easymotion 的出现，是为了替代如要移动光标到下五行的 "),t("code",[s._v("5j")]),s._v("、后六个单词的 "),t("code",[s._v("5w")]),s._v(" 这类的移动光标时要与数字混合的指令（因为数字键不好按），它通过一种更直观的方式去让我们更方便舒服地移动光标。")]),s._v(" "),t("h3",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("ul",[t("li",[s._v("开启 vim-easymotion 插件")]),s._v(" "),t("li",[s._v("改键："),t("code",[s._v("<Leader>")]),s._v(" 改为 "),t("code",[s._v("space")]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("拓展")]),s._v(" "),t("p",[s._v("什么是 "),t("code",[s._v("<Leader>")]),s._v(" ？")]),s._v(" "),t("p",[s._v("vim 中有很多快捷键，还有各种扩展插件，为了避免按键冲突以及丰富按键的组合，则推出了 "),t("code",[s._v("<Leader>")]),s._v(" 的概念，即前缀键或扩展组合键，通过配置 "),t("code",[s._v("<Leader>")]),s._v(" + 其他按键，来拓展出更多可用的组合键。")])])])]),s._v(" "),t("h3",{attrs:{id:"指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[s._v("#")]),s._v(" 指令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("w")]),s._v("：高亮光标后的所有单词的开头")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("b")]),s._v("：高亮光标前的所有单词的开头")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("e")]),s._v("：高亮光标后的所有单词的结尾")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("ge")]),s._v("：高亮光标前的所有单词的结尾")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("l")]),s._v("：高亮光标后的单词的开头和结尾、驼峰、"),t("code",[s._v("_")]),s._v(" 或 "),t("code",[s._v("#")]),s._v(" 之后的内容")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("h")]),s._v("：高亮光标前的单词的开头和结尾、驼峰、"),t("code",[s._v("_")]),s._v(" 或 "),t("code",[s._v("#")]),s._v(" 之后的内容")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("j")]),s._v("：高亮光标后的所有行的开头")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("k")]),s._v("：高亮光标前的所有行的开头")]),s._v(" "),t("li",[t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("<Leader>")]),s._v(" "),t("code",[s._v("j")]),s._v("：高亮光标所有的单词的开头和结尾、驼峰、"),t("code",[s._v("_")]),s._v(" 或 "),t("code",[s._v("#")]),s._v(" 之后的内容")])]),s._v(" "),t("h2",{attrs:{id:"插件-vim-sneak"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插件-vim-sneak"}},[s._v("#")]),s._v(" 插件：vim-sneak")]),s._v(" "),t("p",[s._v("vim 中的 "),t("code",[s._v("f")]),s._v(" 命令后面只能跟一个字符，这样搜索的效率在实际场景中其实不高，而且它是行内搜索；为了弥补这些短板，就有了 vim-sneak。vim-sneak 使用 "),t("code",[s._v("s")]),s._v(" "),t("code",[s._v("S")]),s._v(" 操作符，后面可以接两个字符，并且是全局搜索，即当你搜索了一次之后，可以使用 "),t("code",[s._v(";")]),s._v(" 不断的往下搜索相同的内容；为了使用更方便，我们可以直接把 "),t("code",[s._v("f")]),s._v(" "),t("code",[s._v("F")]),s._v(" 映射到 "),t("code",[s._v("s")]),s._v(" "),t("code",[s._v("S")]),s._v("，这样在日常使用中就更方便了。")]),s._v(" "),t("h3",{attrs:{id:"配置-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-2"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("开启 vim.sneak 插件，在 vscode 的 "),t("code",[s._v("setting.json")]),s._v(" 中添加：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.sneak"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加改键映射：")]),s._v(" "),t("p",[s._v("首先配置 normal mode 下的 "),t("code",[s._v("f")]),s._v(" "),t("code",[s._v("F")]),s._v(" 映射为 vim-sneak 的 "),t("code",[s._v("s")]),s._v(" "),t("code",[s._v("S")]),s._v("，这样映射后，为了让 "),t("code",[s._v("s")]),s._v(" "),t("code",[s._v("S")]),s._v(" 恢复为最原始的功能（删除光标所在字符并进入 insert mode；删除光标所在行从开头非 blank 字符到行尾的内容），需要把 "),t("code",[s._v("s")]),s._v(" "),t("code",[s._v("S")]),s._v(" 的原始功能用 "),t("code",[s._v("c")]),s._v(" "),t("code",[s._v("C")]),s._v(" 实现一下，而且由于在这个映射过程中，存在递归映射的情况（如 "),t("code",[s._v("f")]),s._v(" → "),t("code",[s._v("s")]),s._v(" → "),t("code",[s._v("c l")]),s._v("），所以要配置在 "),t("code",[s._v("vim.normalModeKeyBindingsNonRecursive")]),s._v(" 中，遂在 vscode 的 "),t("code",[s._v("setting.json")]),s._v(" 中添加：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.normalModeKeyBindingsNonRecursive"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    ...\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"F"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"S"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"l"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"S"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ...\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("配置完上面的设置后，我们就可以愉快地使用 "),t("code",[s._v("f")]),s._v(" 或 "),t("code",[s._v("F")]),s._v(" + 两个字符（或单字符 + 回车）在 normal mode 下进行搜索了，但是想在 visual mode 和 operater-pending 模式（即当输入了如 "),t("code",[s._v("d")]),s._v(" "),t("code",[s._v("c")]),s._v(" 等操作符后，vim 等待输入范围和文本对象时的状态，简而言之就是可以让 vim 支持如 "),t("code",[s._v("df")]),s._v(" + 两个字符的这种操作，因为不配置的话在 operater-pending 模式中 vim-sneak 使用的是 "),t("code",[s._v("z")]),s._v(" 操作符），则需要继续配置；并且在 visual mode 中，"),t("code",[s._v("F")]),s._v(" 无法使用，遂只配置 "),t("code",[s._v("f")]),s._v("，配置如下：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.visualModeKeyBindingsNonRecursive"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"vim.operatorPendingModeKeyBindingsNonRecursive"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"before"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"F"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"小练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小练习"}},[s._v("#")]),s._v(" 小练习")]),s._v(" "),t("p",[s._v("建议在日常使用中直接练习，或者把本文复制到中 vscode 随便跳。")])])}),[],!1,null,null,null);t.default=e.exports}}]);