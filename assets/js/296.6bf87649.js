(window.webpackJsonp=window.webpackJsonp||[]).push([[296],{621:function(t,v,_){"use strict";_.r(v);var s=_(4),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"什么是数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构"}},[t._v("#")]),t._v(" 什么是数据结构")]),t._v(" "),v("blockquote",[v("p",[t._v("官方没有统一定义，下面有几种说法")])]),t._v(" "),v("h2",{attrs:{id:"文献"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文献"}},[t._v("#")]),t._v(" 文献")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("文献")]),t._v(" "),v("ul",[v("li",[t._v("“数据结构是"),v("code",[t._v("数据对象，以及存在于该对象的实例和组成实例的数据元素之间的各种联系")]),t._v("。这些联系可以通过定义相关的函数来给出。”   ------ Sartaj Sahni，《数据结构、算法与应用》")]),t._v(" "),v("li",[t._v("“数据结构是"),v("code",[t._v("ADT（抽象数据类型Abstract Data Type）")]),t._v("的物理实现。”  ------ Clifford A.Shaffer，《数据结构与算法分析》")]),t._v(" "),v("li",[t._v("“数据结构（data structure）是"),v("code",[t._v("计算机中存储、组织数据的方式")]),t._v("。通常情况下，精心选择的数据结构可以带来最优效率的算法。” ------ 中文维基百科")])])]),t._v(" "),v("h2",{attrs:{id:"gpt4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gpt4"}},[t._v("#")]),t._v(" GPT4")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("定义")]),t._v(" "),v("p",[t._v("数据结构是计算机存储、组织数据的方式，使得我们可以高效地访问和修改数据。简单来说，数据结构就是数据的组织、管理和存储格式，其使用的目的是为了高效地执行数据的处理和检索操作。")])]),t._v(" "),v("p",[v("strong",[t._v("数据结构主要分为两大类：线性数据结构和非线性数据结构")])]),t._v(" "),v("p",[t._v("1、"),v("strong",[t._v("线性数据结构")]),t._v("：数据元素之间是一对一的关系。常见的线性数据结构包括：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("数组")]),t._v("：在内存中占据连续空间的数据结构，可以通过索引快速访问元素。")]),t._v(" "),v("li",[v("strong",[t._v("链表")]),t._v("：元素由节点组成，每个节点包含数据和指向下一个节点的指针，不需要连续的内存空间。")]),t._v(" "),v("li",[v("strong",[t._v("栈（Stack）")]),t._v("：遵循后进先出（LIFO）原则的集合。")]),t._v(" "),v("li",[v("strong",[t._v("队列（Queue）")]),t._v("：遵循先进先出（FIFO）原则的集合。")])]),t._v(" "),v("p",[t._v("2、"),v("strong",[t._v("非线性数据结构")]),t._v("：数据元素之间可以是一对多或多对多的关系。常见的非线性数据结构包括：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("树（Tree）")]),t._v("：元素以分支关系组织，每个节点有零个或多个子节点，没有循环引用。")]),t._v(" "),v("li",[v("strong",[t._v("图（Graph）")]),t._v("：由节点（顶点）和连接节点的边组成，节点之间的关系可以是任意的。")]),t._v(" "),v("li",[v("strong",[t._v("堆（Heap）")]),t._v("：是一种特殊的完全二叉树结构，通常用于实现优先队列。")])]),t._v(" "),v("p",[t._v("数据结构的选择依赖于特定场景下的需求，如数据的插入、删除、搜索操作的频率，以及数据量的大小等。不同的数据结构有其各自的优势和局限性。例如，数组支持快速的随机访问，但在中间插入或删除元素的效率较低；而链表在插入和删除操作时效率较高，但访问特定元素的速度较慢。")])])}),[],!1,null,null,null);v.default=a.exports}}]);