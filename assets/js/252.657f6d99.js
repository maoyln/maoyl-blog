(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{577:function(s,t,a){"use strict";a.r(t);var e=a(4),v=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"得力辅助-大小写转换、注释与显示悬浮提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#得力辅助-大小写转换、注释与显示悬浮提示"}},[s._v("#")]),s._v(" 得力辅助：大小写转换、注释与显示悬浮提示")]),s._v(" "),t("h2",{attrs:{id:"大小写转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大小写转换"}},[s._v("#")]),s._v(" 大小写转换")]),s._v(" "),t("p",[s._v("在之前的训练开始前的准备中提到的改改键中，我们提到把 "),t("code",[s._v("control")]),s._v(" 键与 "),t("code",[s._v("caps lock")]),s._v(" 键互换，因为在大部分要输入大写的时候，我们都可以通过 "),t("code",[s._v("shift + [字母]")]),s._v(" 来达到一样的效果；")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("gu")]),s._v("：变小写")]),s._v(" "),t("li",[t("code",[s._v("gU")]),s._v("：变大小")]),s._v(" "),t("li",[t("code",[s._v("~")]),s._v("：大小写互换")])]),s._v(" "),t("p",[t("code",[s._v("gu")]),s._v(" "),t("code",[s._v("gU")]),s._v(" 后面可接 motion ，比如 "),t("code",[s._v("gue")]),s._v(" 就可以把光标到单词末尾的字符变成小写，而 "),t("code",[s._v("gUiw")]),s._v(" 就可以把当前单词变成全大写；与 "),t("code",[s._v("d")]),s._v(" "),t("code",[s._v("c")]),s._v(" 等操作符是一样的用法。而在 visul mode 中，我们可以直接使用 "),t("code",[s._v("u")]),s._v(" "),t("code",[s._v("U")]),s._v("，即选中了一段文本后可以直接用这两个命令把所有的字母转换成大写或小写。")]),s._v(" "),t("h2",{attrs:{id:"注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[s._v("#")]),s._v(" 注释")]),s._v(" "),t("p",[s._v("平时在 vscode 中，注释的快捷键是 "),t("code",[s._v("command + /")]),s._v("，其实也能用，不过 vim 的注释命令除了单行注释、多行注释，还可以选中了行内的文本后进行行内注释；命令如下：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("gc")]),s._v("：单行注释，和 "),t("code",[s._v("command + /")]),s._v(" 的效果一样；如在 js 文件中注释时是 "),t("code",[s._v("//")]),s._v(" 开头")]),s._v(" "),t("li",[t("code",[s._v("gC")]),s._v("：多行注释，如在 js 文件中注释时是被 "),t("code",[s._v("/* */")]),s._v(" 包裹")])]),s._v(" "),t("p",[s._v("而且，这个命令在 visual mode 和 normal mode 是通用的。")]),s._v(" "),t("h2",{attrs:{id:"显示悬浮提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#显示悬浮提示"}},[s._v("#")]),s._v(" 显示悬浮提示")]),s._v(" "),t("p",[s._v("在日常开发中，我们常常会需要查看一些代码中的报错、警告或者一些代码提示等，但是大部分的编辑器，如 vscode，都是需要用鼠标移到被标记的代码中才能让悬浮提示框显示出来，而 vim 提供了一个命令，可以达到鼠标划入光标所在单词的效果，它就是 "),t("code",[s._v("gh")]),s._v("。记忆它也很简单，就记住 “h for hover”，即 "),t("code",[s._v("h")]),s._v(" 是指 “hover” 的意思，我相信前端开发的小伙伴应该都能快速记住这个指令。")]),s._v(" "),t("h2",{attrs:{id:"练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" atest "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" btest "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ctest "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])}),[],!1,null,null,null);t.default=v.exports}}]);