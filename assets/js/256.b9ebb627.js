(window.webpackJsonp=window.webpackJsonp||[]).push([[256],{582:function(s,t,a){"use strict";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"只手遮窗-窗口管理大法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只手遮窗-窗口管理大法"}},[s._v("#")]),s._v(" 只手遮窗：窗口管理大法")]),s._v(" "),t("p",[s._v("在开发中，我们可能需要同时打开多个编辑窗口，二分屏、三分屏甚至更多，这时候在不同的窗口中切换焦点也就是一个大需求，而 vim 和 vscode，都有提供一套多编辑窗口的管理方法。")]),s._v(" "),t("h2",{attrs:{id:"vim-的窗口管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim-的窗口管理"}},[s._v("#")]),s._v(" vim 的窗口管理")]),s._v(" "),t("h3",{attrs:{id:"新建窗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建窗"}},[s._v("#")]),s._v(" 新建窗")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("v")]),s._v("：在当前窗口的左边或右边新建窗口")]),s._v(" "),t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("s")]),s._v("：在当前窗口的上边或下边新建窗口")])]),s._v(" "),t("h3",{attrs:{id:"窗口切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#窗口切换"}},[s._v("#")]),s._v(" 窗口切换")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("h")]),s._v(" "),t("code",[s._v("j")]),s._v(" "),t("code",[s._v("k")]),s._v(" "),t("code",[s._v("l")]),s._v("：切换到上 / 下 / 左 / 右方向的窗口")]),s._v(" "),t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("v")]),s._v("：打开多个窗口时，在不同的窗口间相互切换，如只有两个窗口时，则在两个窗口间互相切换")])]),s._v(" "),t("h3",{attrs:{id:"关闭窗口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭窗口"}},[s._v("#")]),s._v(" 关闭窗口")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("c")]),s._v("：关闭当前窗口")]),s._v(" "),t("li",[t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("v")]),s._v("：保留当前窗口，关闭其他所有窗口")])]),s._v(" "),t("h2",{attrs:{id:"vscode-的窗口管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vscode-的窗口管理"}},[s._v("#")]),s._v(" vscode 的窗口管理")]),s._v(" "),t("p",[s._v("可能有些人（包括我）会觉得 vim 的窗口管理快捷键比较繁琐，尤其是使用过 vscode 的窗口管理快捷键的小伙伴，为了让我们管理得更顺手，我们可以结合 vscode 自身的快捷键再加上一些扩展的键位映射，达到和 vim 的窗口管理快捷键一样的效果。如下：")]),s._v(" "),t("h3",{attrs:{id:"新建窗口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建窗口"}},[s._v("#")]),s._v(" 新建窗口")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("command")]),s._v(" + "),t("code",[s._v("\\")]),s._v("：在当前窗口的左边或右边新建口")]),s._v(" "),t("li",[t("code",[s._v("command")]),s._v(" + "),t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("\\")]),s._v("：在当前窗口的上边或下边新建窗口")])]),s._v(" "),t("h3",{attrs:{id:"窗口切换-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#窗口切换-2"}},[s._v("#")]),s._v(" 窗口切换")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("shift")]),s._v(" + "),t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("h")]),s._v(" "),t("code",[s._v("j")]),s._v(" "),t("code",[s._v("k")]),s._v(" "),t("code",[s._v("l")]),s._v("：切换到上 / 下 / 左 / 右方向的窗口 (需要有将 "),t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("h")]),s._v(" "),t("code",[s._v("j")]),s._v(" "),t("code",[s._v("k")]),s._v(" "),t("code",[s._v("l")]),s._v(" 映射为方向键)，并且在 vscode 的 "),t("code",[s._v("keybindings.json")]),s._v(" 中添加如下映射,映射其实是把 "),t("code",[s._v("shift")]),s._v(" + 方向键映射为 vim 的窗口切换键了：")])]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shift+left"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim.remap"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"when"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"vim.mode == 'Normal'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<c-w>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shift+right"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim.remap"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"when"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"vim.mode == 'Normal'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<c-w>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"l"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shift+up"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim.remap"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"when"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"vim.mode == 'Normal'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<c-w>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shift+down"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim.remap"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"when"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"vim.mode == 'Normal'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"after"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<c-w>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"j"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v(":::info 多嘴一句\n感觉 "),t("code",[s._v("shift")]),s._v(" + "),t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("h")]),s._v(" "),t("code",[s._v("j")]),s._v(" "),t("code",[s._v("k")]),s._v(" "),t("code",[s._v("l")]),s._v(" 和 "),t("code",[s._v("control")]),s._v(" + "),t("code",[s._v("w")]),s._v(" + "),t("code",[s._v("h")]),s._v(" "),t("code",[s._v("j")]),s._v(" "),t("code",[s._v("k")]),s._v(" "),t("code",[s._v("l")]),s._v(" 其实是差不多的，改不改区别不大。\n:::")]),s._v(" "),t("h3",{attrs:{id:"关闭窗口-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭窗口-2"}},[s._v("#")]),s._v(" 关闭窗口")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("command")]),s._v(" + "),t("code",[s._v("w")]),s._v("：关闭当前窗口")]),s._v(" "),t("li",[t("code",[s._v("command")]),s._v(" + "),t("code",[s._v("k")]),s._v(" + "),t("code",[s._v("w")]),s._v("：保留当前窗口，关闭其他所有窗口")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("小提示")]),s._v(" "),t("p",[s._v("在vscode中如果关闭有未保存内容的窗口时，会弹出对话框；\n这时如果按 "),t("code",[s._v("enter")]),s._v(" 键，即为 “保存”，\n按 "),t("code",[s._v("space")]),s._v(" 键，是为 “不保存”。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);