(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{359:function(e,t,r){"use strict";r.r(t);var a=r(4),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"js全屏模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js全屏模式"}},[e._v("#")]),e._v(" js全屏模式")]),e._v(" "),t("blockquote",[t("p",[e._v("参考文档："),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fullscreen_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("API"),t("OutboundLink")],1)])]),e._v(" "),t("blockquote",[t("p",[e._v("demo地址："),t("a",{attrs:{href:"https://github.com/maoyln/react-ts-full-screen.git",target:"_blank",rel:"noopener noreferrer"}},[e._v("github"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"全屏api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全屏api"}},[e._v("#")]),e._v(" 全屏API")]),e._v(" "),t("p",[t("code",[e._v("全屏 API")]),e._v(" 为使用用户的整个屏幕展现网络内容提供了一种简单的方式，并且在不需要时退出全屏模式。这种 API 让你可以简单地控制浏览器，使得一个元素与其子元素，如果存在的话，可以占据整个屏幕，并在此期间，从屏幕上隐藏所有的浏览器用户界面以及其他应用。")]),e._v(" "),t("p",[e._v("可以在"),t("code",[e._v("全屏 API 指南")]),e._v("这篇文章了解更多细节。")]),e._v(" "),t("blockquote",[t("p",[e._v("注意：当前并不是所有的浏览器都支持该 API，大多数浏览器需要使用供应商前缀或者尚未实现该规范。下面的浏览器兼容性表 Browser compatibility 可以看到各个浏览器对此的支持（你也可以使用 Fscreen 来提供跨浏览器 API 访问）。")])]),e._v(" "),t("h3",{attrs:{id:"接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[e._v("#")]),e._v(" 接口")]),e._v(" "),t("p",[e._v("全屏 API 没有它自己的接口实现。相反，它提供了一些其他接口以供实现全屏所需的方法、属性、事件处理函数。接下来会列出所有细节。")]),e._v(" "),t("h3",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),t("p",[e._v("全屏 API 在 Document 和 Element 接口中增加了一些方法，可用于允许打开关闭全屏模式。")]),e._v(" "),t("h4",{attrs:{id:"document-中的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-中的方法"}},[e._v("#")]),e._v(" Document 中的方法")]),e._v(" "),t("p",[t("code",[e._v("Document.exitFullscreen()")]),e._v("\n用于请求从全屏模式切换到窗口模式，会返回一个 "),t("code",[e._v("Promise")]),e._v("，会在全屏模式完全关闭的时候被置为 resolved 状态。")]),e._v(" "),t("h4",{attrs:{id:"element-中的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-中的方法"}},[e._v("#")]),e._v(" Element 中的方法")]),e._v(" "),t("p",[t("code",[e._v("Element.requestFullscreen()")]),e._v("\n请求浏览器（user agent）将特定元素（甚至延伸到它的后代元素）置为全屏模式，隐去屏幕上的浏览器所有 UI 元素，以及其它应用。返回一个 "),t("code",[e._v("Promise")]),e._v("，并会在全屏模式被激活的时候变成 resolved 状态。")]),e._v(" "),t("h3",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),t("p",[t("code",[e._v("Document")]),e._v(" 提供了可以用于判断是否支持和启用全屏模式的属性，也能得知现在是否处在全屏模式、哪一个元素在使用屏幕等信息。")]),e._v(" "),t("p",[t("code",[e._v("DocumentOrShadowRoot.fullscreenElement")])]),e._v(" "),t("p",[t("code",[e._v("fullscreenElement")]),e._v(" 属性提供了当前在 DOM （或者 shadow DOM）里被展示为全屏模式的 "),t("code",[e._v("Element")]),e._v("，如果这个值为 null，文档不处于全屏模式。")]),e._v(" "),t("p",[t("code",[e._v("Document.fullscreenEnabled")])]),e._v(" "),t("p",[t("code",[e._v("fullscreenEnabled")]),e._v(' 属性提供了启用全屏模式的可能性。当它的值是 false 的时候，表示全屏模式不可用（可能的原因有 "fullscreen" 特性不被允许，或全屏模式不被支持等 ）。')]),e._v(" "),t("h4",{attrs:{id:"事件处理程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件处理程序"}},[e._v("#")]),e._v(" 事件处理程序")]),e._v(" "),t("p",[e._v("Fullscreen API 定义了两个事件，可用于检测全屏模式的打开和关闭，以及在全屏和窗口模式之间切换过程中发生的错误。"),t("code",[e._v("Document")]),e._v(" 和  "),t("code",[e._v("Element")]),e._v(" 接口提供了这些事件的事件处理函数。")]),e._v(" "),t("blockquote",[t("p",[e._v("注意：这些事件处理函数特性不可以当成 HTML 内容属性来使用。 换句话说，你无法在 HTML 内容中为 fullscreenchange (en-US) 和 fullscreenerror (en-US) 指定事件处理程序，你必须通过  JavaScript 代码添加它们。")])]),e._v(" "),t("h4",{attrs:{id:"document-上的事件处理程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-上的事件处理程序"}},[e._v("#")]),e._v(" Document 上的事件处理程序")]),e._v(" "),t("p",[t("code",[e._v("Document.onfullscreenchange")]),e._v(" "),t("code",[e._v("fullscreenchange (en-US)")]),e._v(" 事件的处理程序，当进入全屏或退出全屏时，事件将被发送到"),t("code",[e._v("Document")]),e._v("上。此处理程序仅在整个文档全屏模式更改时有效。")]),e._v(" "),t("p",[t("code",[e._v("Document.onfullscreenerror")]),e._v(" "),t("code",[e._v("fullscreenerror (en-US)")]),e._v(" 事件的处理程序，当进入全屏或退出全屏出错时，事件将被发送到 "),t("code",[e._v("Document")]),e._v(" 上，仅对整个文档的全屏模式更改出错时候有效。")]),e._v(" "),t("h4",{attrs:{id:"element-上的事件处理程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#element-上的事件处理程序"}},[e._v("#")]),e._v(" Element 上的事件处理程序")]),e._v(" "),t("p",[t("code",[e._v("Element.onfullscreenchange")]),e._v("\n当全屏事件发生时，该事件会被发送到该元素，表明该元素进入或退出全屏模式")]),e._v(" "),t("p",[t("code",[e._v("Element.onfullscreenerror")]),e._v(" "),t("code",[e._v("fullscreenerror (en-US)")]),e._v(" 事件的处理程序，当指定的 "),t("code",[e._v("Element")]),e._v(" 改变全屏模式时候出现错误，该事件将被发送到指定的 "),t("code",[e._v("Element")]),e._v(" 上。")]),e._v(" "),t("h4",{attrs:{id:"废弃属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#废弃属性"}},[e._v("#")]),e._v(" 废弃属性")]),e._v(" "),t("p",[e._v("Fullscreen API 定义了两个事件，可用于检测全屏模式的打开和关闭，以及在全屏和窗口模式之间切换过程中发生的错误。Document 和  Element 接口提供了这些事件的事件处理函数。")]),e._v(" "),t("blockquote",[t("p",[e._v("注意：这些事件处理函数特性不可以当成 HTML 内容属性来使用。 换句话说，你无法在 HTML 内容中为 fullscreenchange (en-US) 和 fullscreenerror (en-US) 指定事件处理程序，你必须通过  JavaScript 代码添加它们。")])]),e._v(" "),t("h3",{attrs:{id:"dictionaries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dictionaries"}},[e._v("#")]),e._v(" Dictionaries")]),e._v(" "),t("p",[t("code",[e._v("FullscreenOptions (en-US)")]),e._v("\n在调用 "),t("code",[e._v("requestFullscreen()")]),e._v(" 时可以设置选项。")]),e._v(" "),t("h4",{attrs:{id:"访问控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问控制"}},[e._v("#")]),e._v(" 访问控制")]),e._v(" "),t("p",[e._v("全屏模式可由功能策略（ Feature Policy）控制。全屏模式功能由字符串“full screen”标识，默认的允许列表值为“self”，这意味着在顶级文档上下文 以及 从与顶级文档相同的源加载的嵌套上下文中允许使用全屏模式。")]),e._v(" "),t("p",[e._v("请参阅使用功能策略（ Feature Policy ）以了解有关使用功能策略控制对API的访问的更多信息。")]),e._v(" "),t("h4",{attrs:{id:"使用说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用说明"}},[e._v("#")]),e._v(" 使用说明")]),e._v(" "),t("p",[e._v("用户通过按 ++==ESC==++  键（或 ++==F11==++）即可退出全屏模式，而不是等着站点或应用的代码来做这件事。确定你在你的用户界面里提供合适的界面元素来告知用户这个可选项。")]),e._v(" "),t("blockquote",[t("p",[e._v("注意：当处在全屏模式中，浏览其他页面，切换标签页，或者切换到其他应用（例如使用 Alt-Tab）也会导致退出全屏模式。")])]),e._v(" "),t("h3",{attrs:{id:"浏览器兼容性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[e._v("#")]),e._v(" 浏览器兼容性")]),e._v(" "),t("p",[e._v("所有的浏览器都实现了这个API。然而一些带有前缀的实现在拼写上略微有些差别；例如，不同于 requestFullscreen()，存在一个 MozRequestFullScreen()。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/maoyln/maoyl-img/blog/831629109557_.pic.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/maoyln/maoyl-img/blog/841629109670_.pic.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=v.exports}}]);